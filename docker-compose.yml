version: '3.8'

services:
  web:
    build: .
    container_name: nba_nfl_parlay_system
    ports:
      - "8000:8000"
    environment:
      # Enable both sports
      - ENABLE_NFL=true
      - ENABLE_NBA=true
      # Database configurations
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
    volumes:
      # Mount model directories
      - ./models:/app/models
      - ./data/chunks:/app/data/chunks
      - ./logs:/app/logs
      # Mount .env file for configuration
      - ./.env:/app/.env:ro
    depends_on:
      - redis
      - qdrant
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: nba_nfl_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  qdrant:
    image: qdrant/qdrant:latest
    container_name: nba_nfl_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
  qdrant_data:

networks:
  default:
    name: nba_nfl_parlay_network
